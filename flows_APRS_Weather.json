[{"id":"e3dd8947.85a598","type":"template","z":"997390d.b67ef7","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"user {{call}} pass {{aprspass}}\n{{callForMsg}}>APRS,TCPIP*:@{{daytime}}z{{lat}}/{{lon}}_{{windDir}}/{{windSpeed}}g{{windGust}}t{{temperature}}r{{rainLastHour}}p{{rainLast24}}P{{rainSinceMid}}h{{humidity}}b{{pressure}}{{comment}}\n","output":"str","x":1100,"y":1360,"wires":[["4fc08da2.e36c94"]]},{"id":"7d04dd01.9f7eb4","type":"function","z":"997390d.b67ef7","name":"convert","func":"if (typeof msg.payload.windDir !== 'undefined'){\n    msg.windDir = padValue(msg.payload.windDir);\n}else{\n    msg.windDir = \"...\";\n}\n\nif (typeof msg.payload.windSpeed !== 'undefined'){\n    msg.windSpeed = padValue(convertKmhToMph(msg.payload.windSpeed));\n}else{\n    msg.windSpeed = \"...\";\n}\n\nif(typeof msg.payload.windGust !== 'undefined'){\n    msg.windGust = padValue(convertKmhToMph(msg.payload.windGust))\n}else{\n    msg.windGust = \"...\";\n}\n\nif(typeof msg.payload.temperature !== 'undefined'){\n    msg.temperature = padValue(convertCelsiusToFahrenheit(msg.payload.temperature));\n}else{\n    msg.temperature = \"...\";\n}\n\nif(typeof msg.payload.rainLastHour !== 'undefined'){\n    msg.rainLastHour = padValue(convertMmToInch(msg.payload.rainLastHour));\n}else{\n    msg.rainLastHour = \"...\";\n}\n\nif(typeof msg.payload.rainLast24 !== 'undefined'){\n    msg.rainLast24 = padValue(convertMmToInch(msg.payload.rainLast24));\n}else{\n    msg.rainLast24 = \"...\";\n}\n\nif(typeof msg.payload.rainSinceMidnight !== 'undefined'){\n    msg.rainSinceMid = padValue(convertMmToInch(msg.payload.rainSinceMidnight));\n}else{\n    msg.rainSinceMid = \"...\";\n}\n\nif(typeof msg.payload.humidity !== 'undefined'){\n    msg.humidity = convertHumidity(Math.round(msg.payload.humidity));\n}else{\n    msg.humidity = \"..\";\n}\n\nif(typeof msg.payload.pressure !== 'undefined'){\n    if (msg.pressureAbsolut){\n        msg.pressure = (Math.round(calcRealPressure(msg.payload.pressure,msg.payload.temperature,msg.sealevel) * 10));\n    }else{\n        msg.pressure = msg.payload.pressure * 10;\n    }\n}else{\n    msg.pressure = \"...\";\n}\n\nmsg.daytime = getDayTime();\n\nreturn msg;\n\n\n\nfunction calcRealPressure(pressure,temp,elevation){\n\ta = (16000 + 64 * temp);\n\tph = pressure * ((a + elevation)/(a - elevation))\n\treturn ph;\n}\n\nfunction getDayTime(){\n    var d = new Date();\n    day = pad2(d.getUTCDate());\n    hour = pad2(d.getUTCHours());\n    minutes = pad2(d.getUTCMinutes());\n    \n    return day + \"\" + hour + \"\" + minutes;\n    \n    \n}\n\nfunction convertCelsiusToFahrenheit(temp){\n        return temp * 9/5 + 32;\n}\n\nfunction convertKmhToMph(kmh){\n        return kmh * 0.621;\n}\n\nfunction convertHumidity(value){\n        if (value >= 100){\n                return \"00\";\n        }else{\n                return value;\n        }\n}\n\nfunction convertMmToInch(value){\n        return value * 0.03937 * 100;\n}\n\nfunction padValue(value){\n        valueF = parseFloat(value);\n        if (isNaN(valueF)){\n            return \"...\"\n        }\n        stringvalue = \"\" + Math.abs(Math.round(valueF));\n        len = stringvalue.length;\n        isNeg = valueF < 0;\n        if (len == 1){\n                if (isNeg){\n                        return \"-0\" + stringvalue;\n                }else{\n                        return \"00\" + stringvalue;\n                }\n        }else if (len == 2){\n                if (isNeg){\n                        return \"-\" + stringvalue;\n                }else{\n                        return \"0\" + stringvalue;\n                }\n        }else if (len == 3){\n                return stringvalue;\n        }\n}\n\nfunction pad2(n) {\n    return n<10 ? '0'+n : n;\n}","outputs":1,"noerr":0,"x":940,"y":1360,"wires":[["e3dd8947.85a598"]]},{"id":"4fc08da2.e36c94","type":"tcp out","z":"997390d.b67ef7","host":"44.143.43.90","port":"14580","beserver":"client","base64":false,"end":false,"name":"","x":1310,"y":1360,"wires":[]},{"id":"f3a83b82.e53c68","type":"function","z":"997390d.b67ef7","name":"configure","func":"msg.lat = \"4720.12N\"                                // z.B.: 4720.12N\nmsg.lon = \"01240.12E\"                               // z.B.: 01240.12E Wert muss genau so lang wie im Bsp sein - ev. mit 0 vorne-drann\nmsg.callForMsg = \"OE0XYZ\"                           // Call für das das Wetter gemeldet werden soll\nmsg.call = \"OE0XYZ\"                                 // Call ohne Suffix für Authentifizierung am APRS Server\nmsg.aprspass = \"12345\"                              // Passwort für APRS\nmsg.comment = \"Nodered\"                             // Kommentar\nmsg.pressureAbsolut = true                          // Ob der Messwert in absolut vorliegt oder bereits höhenkorrigiert ist\nmsg.sealevel = 750;                                 // Höhe über Meeresspiegel [m]\nreturn msg;","outputs":1,"noerr":0,"x":800,"y":1360,"wires":[["7d04dd01.9f7eb4"]]},{"id":"7d114183.76421","type":"comment","z":"997390d.b67ef7","name":"Erklärung Messwerte","info":"benötigt werden folgende Werte unter folgenden Variablennamen (wenn die eigene Wetterstation gewisse Daten nicht erfasst - einfach Variablen nicht belegen\n\nmsg.payload.windDir\t\t// Windrichtung [Grad]\nmsg.payload.windSpeed\t\t// Windgeschwindigkeit [km/h]\nmsg.payload.windGust\t\t// Windspitze der letzten 5 Minuten [km/h]\nmsg.payload.temperature \t// Temperatur [°C]\nmsg.payload.rainLastHour\t// Regen der letzten Stunde [mm]\nmsg.payload.rainLast24\t\t// Regen der letzten 24h [mm]\nmsg.payload.rainSinceMidnight\t// Regenmenge seit Mitternacht [mm]\nmsg.payload.humidity\t\t// Luftfeuchtigkeit [%]\nmsg.payload.pressure\t\t// Luftdruck [mbar]","x":840,"y":1320,"wires":[]}]